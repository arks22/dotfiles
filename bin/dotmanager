#!/usr/bin/env bash

dotfiles=$(ls -A $HOME/dotfiles | grep -v 'setup\|bin\|.git\|README.md\|.DS_Store')

function dotmanager::help() {
  echo "usage: dotmanager [COMMANDS] [OPTIONS]"
  echo
  echo "OPTIONS:"
  echo "  --help    Display this help messages"
  echo
  echo "COMMANDS:"
  echo "  update    Update dotfiles (git pull)"
  echo "  deploy    Activate commands in dotfiles/bin"
  echo "  clean     Remove dotfiles"
  echo "  init      Install packeges (this command excuted when you install dotfiles)"
}

function dotmanager::update() {
  cd $HOME/dotfiles >/dev/null 2>&1
  msg=$(git fetch origin master && git reset --hard origin/master)
  er=$?
  cd - >/dev/null 2>&1
  if [[ $msg =~ "Already up-to-date." ]] ; then
    echo "dotmanager: dotfiles are already up-to-date."
  elif [[ $er = 0 ]] ; then
    echo "dotmanager: dotfiles were updated."
  fi
}

function dotmanager::deploy() {
  echo "dotmanager:"
  dotmanager::deploy::dotfiles
  dotmanager::deploy::commands
}

function dotmanager::deploy::dotfiles() {
  local i=0
  for dotfile in ${dotfiles[@]}; do
    if [ ! -e $HOME/$dotfile ]; then
      (( i++ ))
      ln -s $HOME/dotfiles/$dotfile $HOME/$dotfile
      [[ $? = 0 ]] && echo "+ linked: $dotfile"
    fi
  done
  [ $i = 0 ] && echo "All dotfiles are already linked."
}

function dotmanager::deploy::commands() {
  local j=0
  commands=$(ls $HOME/dotfiles/bin)
  for command in ${commands[@]}; do
    if [ ! -x $HOME/dotfiles/bin/$command ]; then
      (( j++ ))
      chmod a+x ~/dotfiles/bin/$command
      if [ $(which $command) = "$HOME/dotfiles/bin/$command" ]; then
        echo "+ Permission granted: $command"
      else
        echo "! Failed to make it excutable: $command"
      fi
    fi
  done

  if [ $j = 0 ]; then
    echo "All commands are already excutable."
  fi
}

function dotmanager::recommend() {
  echo "Recommended tasks:"
  echo "  set up colorscheme : solarized color"
  echo "  install neovim"
  echo "  install tmux"
}

function dotmanager::clean() {
  while true; do
    read -n 1 -p "dotmanager: remove dotfiles? [n/y]: " answer
    echo
    case $answer in
      "y" ) 
        for dotfile in ${dotfiles[@]}; do
          unlink ~/$dotfile
          [[ $? = 0 ]] && echo "- unlinked : $dotfile"
        done
        rm -rf ~/dotfiles
        echo "dotfiles were removed."
        echo "To install again, excute \"curl -L raw.github.com/arks22/dotfiles/master/setup/install.bash | bash\"."
        echo "More information about dotfiles : https://github.com/arks22/dotfiles"
      ;;
      "n" ) exit 0 ;;
      * ) echo "Please press y(yes) or n(no)" ;;
    esac
  done
}

function dotmanager::init() {
  if [ $(uname -s) = "Darwin" ]; then
    echo "Please install and set up Brew"
    echo "Brewfile is Here -> dotfiles/setup/Brewfile" 
  elif [ $(uname -s) = "Linux" ]; then
    echo "Please install the required packages manually"
  else
    echo "dotmanager: not support your OS"
  fi
}

function main() {
  if [[ $# = 1 ]] ; then
    case $1 in
      "--help" ) dotmanager::help ;;
      "update" ) dotmanager::update ;;
      "deploy" ) dotmanager::deploy;;
      "clean"  ) dotmanager::clean ;;
      "init"   ) dotmanager::init ;;
      * ) 
        if [[ "$1" =~ ^- ]]; then
          echo "dotmanager: illegal option $1"
          echo
        else
          echo "dotmanager: illegal command $1"
          echo
        fi
        dotmanager::help
       return 1 
      ;;

    esac
  else
    dotmanager::help
    return 1
  fi
}

main $@
